pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS_ID = 'dockerhub-token'
        DEPLOYMENT_NAME = 'profile_page'
        IMAGE_TAG = "v0.${env.BUILD_NUMBER}"
        IMAGE_NAME = "${DOCKERHUB_USERNAME}/${DEPLOYMENT_NAME}:${IMAGE_TAG}"
        SLACK_CHANNEL = '#jenkins'
        SLACK_CREDENTIALS_ID = 'slack-token'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[url: 'https://github.com/shittuay/profile_page.git']]])
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS_ID, usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        sh "docker build -t ${DOCKERHUB_USERNAME}/${DEPLOYMENT_NAME}:${IMAGE_TAG} ."
                    }
                    echo "Image built successfully"
                }
            }
        }
        stage('Docker Push') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS_ID, usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        sh "echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin"
                        sh "docker push ${DOCKERHUB_USERNAME}/${DEPLOYMENT_NAME}:${IMAGE_TAG}"
                    }
                    echo "Image pushed successfully"
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    kubeconfig(credentialsId: 'kubeconfig', serverUrl: '') {
                        // Update and apply Kubernetes deployment YAML
                        sh "sed -i 's|IMAGE_TAG|${env.IMAGE_TAG}|g' kubernetes/deployment.yaml"
                        sh "kubectl apply -f kubernetes/deployment.yaml"
                        echo "Deployment applied to Kubernetes"
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            script {
                slackSend channel: env.SLACK_CHANNEL, color: 'good', message: "Deployment successful: ${currentBuild.currentResult}: \nJOB_NAME: ${env.JOB_NAME} \nBUILD_NUMBER: ${env.BUILD_NUMBER} \nMore Info: ${env.BUILD_URL}", tokenCredentialId: env.SLACK_CREDENTIALS_ID
            }
        }
        failure {
            script {
                slackSend channel: env.SLACK_CHANNEL, color: 'danger', message: "Deployment failed: ${currentBuild.currentResult}: \nJOB_NAME: ${env.JOB_NAME} \nBUILD_NUMBER: ${env.BUILD_NUMBER} \nMore Info: ${env.BUILD_URL}", tokenCredentialId: env.SLACK_CREDENTIALS_ID
            }
        }
    }
}
